#!/usr/bin/python
# resync
# Created Fri Jan 15 15:35:35 AKST 2016
# Copyright (C) 2016 by Raymond E. Marcil <marcilr@gmail.com>
#

import os.path

# Used by sys.exit() to exit with error.
import sys

# -------------------------------------------
# Configuration
# -------------------------------------------
DEBUG = "true";
#DEBUG = "false";


#
# List of manifests to check for configuration
# and manifests to clone sync.
#
manifests = ['manifest', '/home/marcilr/.manifest' ]


# -------------------------------------------
# Functions
# -------------------------------------------

#
# debug()
# str - String to print for DEBUG == 'true'
#
def debug( str ):
  if DEBUG == 'true':
      print str
  return

# error()
# str - String with error message to print
#
def error( str ):
   sys.exit(str)
   return


def loop_over_manifest(manifest):
    debug("loop_over_manifest() Looping...")
    with open(manifest,'r') as file:
        for line in file:
            # Remove end whitespace
            line = line.rstrip()
            source, target == line.split()
            if not line: continue
    debug("loop_over_manifest() Closing manifest")
    file.close
    debug("loop_over_manifest() Closed manifest")
    return


#
# get_manifest()
# Get manifest from the manifests list of manifests.
#
def get_manifest():
    debug( "get_manifest() processing: "
        + str(len(manifests)) + ' manifests')

    for idx, manifest in enumerate(manifests):
        if os.path.isfile(manifest):
            message = "get_manifest() %d, %s" % (idx, manifest)
            debug(message)
        else:
            message = "get_manifest() No %s found, aborting." % manifest
            error(message)
     
    return


# -------------------------------------------
# Main
# -------------------------------------------

get_manifest()

#loop_over_manifest()
