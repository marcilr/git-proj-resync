#!/usr/bin/python
# resync
# Created Fri Jan 15 15:35:35 AKST 2016
# Copyright (C) 2016 by Raymond E. Marcil <marcilr@gmail.com>
#

import os.path

# Used by sys.exit() to exit with error.
import sys

# -------------------------------------------
# Configuration
# -------------------------------------------
DEBUG = "true";
#DEBUG = "false";

# Manifest files to check for
manifest_file = "manifest"
manifest_file_home = "~/.manifest"

# -------------------------------------------
# Functions
# -------------------------------------------

#
# debug()
# str - String to print for DEBUG == 'true'
#
def debug( str ):
  if DEBUG == 'true':
      print str
  return

# error()
# str - String with error message to print
#
def error( str ):
   sys.exit(str)
   return



#
# get_manifest()
# Get manifest from "manifest" in working directory
# or ~/.manifest in home directory.
#
def get_manifest():
    if os.path.isfile(manifest_file):
        print "Found ./manifest"
    elif os.path.isfile(manifest_file_home):
        print "Found ~/.manifest"
    else:
        error("No ./manifest or ~/.manifest found, aborting.")
    return

def loop_over_manifest():
    debug("Looping over manifest...")
    with open(manifest,'r') as file:
        for line in file:
            # Remove end whitespace
            line = line.rstrip()
            source, target == line.split()
            if not line: continue
    debug("Closing manifest")
    file.close
    debug("Manifest closed")
    return


# -------------------------------------------
# Main
# -------------------------------------------

get_manifest()

#loop_over_manifest()
